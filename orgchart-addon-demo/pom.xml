<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.flowingcode.vaadin.addons</groupId>
	<artifactId>orgchart-addon-demo</artifactId>
	<packaging>war</packaging>
	<version>3.0.0-SNAPSHOT</version>
	<name>OrgChart Add-on Demo</name>

	<prerequisites>
		<maven>3</maven>
	</prerequisites>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<failOnMissingWebXml>false</failOnMissingWebXml>

        <!-- Dependencies -->
        <vaadin.project.version>10.0.0.beta11</vaadin.project.version>
        <servlet.api.version>3.1.0</servlet.api.version>
        <selenium.server.version>3.4.0</selenium.server.version>

		<!-- Plugins -->
		<jetty.plugin.version>9.3.9.v20160517</jetty.plugin.version>
		<maven.clean.plugin.version>3.0.0</maven.clean.plugin.version>
		<maven.war.plugin.version>3.1.0</maven.war.plugin.version>

		<vaadin.frontend.path>VAADIN/static/frontend</vaadin.frontend.path>
		<static.target.directory>target/static</static.target.directory>
		<frontend.target.directory>${static.target.directory}/frontend</frontend.target.directory>
	</properties>


	<organization>
		<name>Flowing Code S.A.</name>
		<url>https://www.flowingcode.com</url>
	</organization>

	<scm>
		<url>git://github.com/FlowingCode/orgchart-addon.git</url>
		<connection>scm:git://github.com/FlowingCode/orgchart-addon.git</connection>
		<developerConnection>scm:git:ssh://git@github.com:/FlowingCode/orgchart-addon.git</developerConnection>
		<tag>OrgChart add-on for Vaadin 10</tag>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/FlowingCode/orgchart-addon/issues</url>
	</issueManagement>

	<licenses>
		<license>
			<name>Apache 2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

    <repositories>
        <repository>
            <id>vaadin-prereleases</id>
            <url>http://maven.vaadin.com/vaadin-prereleases/</url>
        </repository>
    
        <repository>
            <id>flow-internal-release</id>
            <url>https://repo.vaadin.com/nexus/content/repositories/flow</url>
        </repository>

        <repository>
            <id>vaadin-addons</id>
            <url>http://maven.vaadin.com/vaadin-addons</url>
        </repository>

        <repository>
            <id>webjars</id>
            <url>https://dl.bintray.com/webjars/maven</url>
        </repository>
    </repositories>
	
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-bom</artifactId>
                <type>pom</type>
                <scope>import</scope>
                <version>${vaadin.project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>com.flowingcode.vaadin.addons</groupId>
			<artifactId>orgchart-addon</artifactId>
			<version>3.0.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet.api.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-server</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- The Jetty plugin allows us to easily test the development build by -->
			<!-- running jetty:run on the command line. -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.plugin.version}</version>
				<configuration>
					<scanIntervalSeconds>2</scanIntervalSeconds>
				  </configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											exec-maven-plugin
										</artifactId>
										<versionRange>
											[1.6.0,)
										</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[3.0.2,)
										</versionRange>
										<goals>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>productionMode</id>
			<activation>
				<property>
					<name>vaadin.productionMode</name>
				</property>
			</activation>

			<properties>
				<npm.build.goal>run prodMode</npm.build.goal>
				<jetty.extra.resource.base>${project.build.directory}/jetty-extra-resources</jetty.extra.resource.base>
			</properties>

			<dependencies>
				<dependency>
					<groupId>com.vaadin</groupId>
					<artifactId>flow-server-production-mode</artifactId>
					<version>${flow.project.version}</version>
				</dependency>
			</dependencies>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>${maven.war.plugin.version}</version>
						<configuration>
							<webResources>
								<resource>
									<directory>${frontend.working.directory}/build</directory>
									<targetPath>${vaadin.frontend.path}</targetPath>
								</resource>
							</webResources>
							<packagingExcludes>**/node_modules/,**/node/,**/etc/,**/bower.json,**/package.json
							</packagingExcludes>
						</configuration>
					</plugin>

					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>${maven.resources.plugin.version}</version>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>process-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/jetty-extra-resources/${vaadin.frontend.path}</outputDirectory>
									<overwrite>true</overwrite>
									<resources>
										<resource>
											<directory>${project.basedir}/${frontend.working.directory}/build</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

</project>
